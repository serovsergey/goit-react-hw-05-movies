{"version":3,"file":"static/js/859.6a02117f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.scss?f9f6","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__psP2f\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/tmdbAPI';\nimport noImage from '../../assets/no-image.svg';\nimport s from './MovieList.module.scss';\n\nexport const MovieList = ({ items, state }) => {\n  if (!items.length) {\n    return \"There are no movies.\";\n  }\n  return (\n    <>\n      <ul className={s.list}>\n        {items.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: state }}>\n              <img src={poster_path ? API.IMAGES_BASE_URL + 'w154' + poster_path : noImage} alt={title} />\n              <p>{title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  })).isRequired,\n  state: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pagList\":\"Pagination_pagList__navN0\",\"active\":\"Pagination_active__q3h4d\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Pagination.module.scss';\n\nexport const Pagination = ({ page, total_pages, onNavigate }) => {\n  const handleNavigate = (evt) => {\n    onNavigate(evt.target.value);\n  }\n\n  if (total_pages <= 1) {\n    return;\n  }\n\n  return (\n    <ul className={s.pagList}>\n      {total_pages > 1 && <li><button disabled={page === 1} value={page - 1} onClick={handleNavigate}>{'\\u2B9C'}</button></li>}\n      {page > 1 && <li><button value={1} onClick={handleNavigate}>1</button></li>}\n      {page > 4 && <li><span>...</span></li >}\n      {page > 3 && <li><button value={page - 2} onClick={handleNavigate}>{page - 2}</button></li >}\n      {page > 2 && <li><button value={page - 1} onClick={handleNavigate}>{page - 1}</button></li >}\n      <li><button className={s.active}>{page}</button></li>\n      {total_pages - 1 > page && <li><button value={page + 1} onClick={handleNavigate}>{page + 1}</button></li >}\n      {total_pages - 2 > page && <li><button value={page + 2} onClick={handleNavigate}>{page + 2}</button></li >}\n      {total_pages - 3 > page && <li><span>...</span></li>}\n      {total_pages > page && <li><button value={total_pages} onClick={handleNavigate}>{total_pages}</button></li >}\n      {total_pages > 1 && <li><button disabled={page === total_pages} value={page + 1} onClick={handleNavigate}>{'\\u2B9E'}</button></li >}\n    </ul>\n  )\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total_pages: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport * as API from '../../services/tmdbAPI';\n\n// import s from './Home.module.scss';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList';\nimport { Pagination } from 'components/Pagination';\nimport Loader from 'components/common/Loader';\n\nconst Home = (props) => {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = Number(searchParams.get(\"page\")) || 1;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setMovies([]);\n        const data = await API.getTrending(page);\n        if (data.results.length) {\n          setMovies(data.results);\n          setTotalPages(data.total_pages);\n        }\n      }\n      catch (e) {\n        console.log(e)\n      }\n      finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [page])\n\n  const gotoPage = pageNum => {\n    setSearchParams(Number(pageNum) === 1 ? {} : { page: pageNum })\n  }\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <h2>\n        Trending Movies\n      </h2>\n      {!!movies.length && <MovieList items={movies} state={location} />}\n      <Pagination page={page} total_pages={totalPages} onNavigate={gotoPage} />\n    </>\n  )\n};\n\n// Home.propTypes = {};\n\nexport default Home;\n"],"names":["MovieList","items","state","length","className","s","map","id","title","poster_path","to","from","src","API","noImage","alt","Pagination","page","total_pages","onNavigate","handleNavigate","evt","target","value","disabled","onClick","props","useState","movies","setMovies","totalPages","setTotalPages","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","Number","get","useEffect","data","results","console","log","Loader","pageNum"],"sourceRoot":""}