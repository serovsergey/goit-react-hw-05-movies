{"version":3,"file":"static/js/125.3bff1a0e.chunk.js","mappings":"gRACA,EAAuB,2BAAvB,EAAyD,2BAAzD,EAA6F,6BAA7F,EAAoI,8BAApI,EAAwK,0BAAxK,EAA2M,6B,mBC+E3M,EAvEqB,SAACA,GAAW,IAAD,IAC9B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAqBjB,IAnBAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGL,GAAa,GAFhB,SAGsBM,EAAAA,GAAoBL,EAAOM,SAHjD,QAGSC,EAHT,SAMKV,EAAgBU,GANrB,gDAUGC,QAAQC,IAAI,SAVf,yBAaGV,GAAa,GAbhB,2EAAD,EAgBD,GAAE,CAACC,EAAOM,UAEPR,EACF,OAAO,SAACY,EAAA,EAAD,IAGT,GAAKd,EAAL,CAIA,IAAMe,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkBC,GAASD,EAAW,IAAMC,EAAW,GAAvD,EAEjBC,EAAqFlB,EAArFkB,MAAOC,EAA8EnB,EAA9EmB,YAAaC,EAAiEpB,EAAjEoB,SAAUC,EAAuDrB,EAAvDqB,aAAcC,EAAyCtB,EAAzCsB,eAAgBC,EAAyBvB,EAAzBuB,aAAcC,EAAWxB,EAAXwB,OAC5EC,EAAcJ,GAAgBC,EAC9BI,EAAcD,EAAc,IAAIE,KAAKF,GAAaG,cAAgB,EAClEC,GAA4B,GAAfN,GAAmBO,QAAQ,GACxCC,EAAeP,EAAOQ,KAAK,qBAAGC,IAAH,IAAqBC,KAAK,KAG3D,OACE,4BACE,SAAC,KAAD,CAAMC,GAAE,iBAAE7B,QAAF,IAAEA,GAAF,UAAEA,EAAU8B,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,UAAWC,UAAWrB,EAAzD,uBACA,iBAAKqB,UAAWrB,EAAhB,WACE,gBAAKsB,IAAKpB,EAAcV,EAAAA,GAAsB,OAASU,EAAcqB,EAAAA,EAASC,IAAKvB,EAAOoB,UAAWrB,KACrG,4BACE,0BAAKC,EAAL,IAAaQ,GAAW,WAAQA,EAAR,SACxB,wCAAgBG,EAAhB,QACA,sCACA,uBAAIT,KACJ,oCACA,uBAAIW,WAIR,mBACA,qDACA,gBAAIO,UAAWrB,EAAf,WACE,yBAAI,SAAC,KAAD,CAASkB,GAAE,kBAAa/B,EAAOM,QAApB,YAAuC0B,MAAO9B,EAAS8B,MAAOE,UAAWvB,EAApF,wBACJ,yBAAI,SAAC,KAAD,CAASoB,GAAE,kBAAa/B,EAAOM,QAApB,SAAoC0B,MAAO9B,EAAS8B,MAAOE,UAAWvB,EAAjF,wBAGN,SAAC,KAAD,MAjCH,CAoCF,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.scss?57ee","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info\":\"MovieDetails_info__Ngz-G\",\"link\":\"MovieDetails_link__jKv3y\",\"poster\":\"MovieDetails_poster__Fyg8Y\",\"btnList\":\"MovieDetails_btnList__ri1C2\",\"tab\":\"MovieDetails_tab__aSc+H\",\"active\":\"MovieDetails_active__eF+lm\"};","import React, { useEffect, useState } from 'react';\nimport { Link, NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport * as API from '../../services/tmdbAPI';\nimport noImage from '../../assets/no-image.svg';\n\nimport s from './MovieDetails.module.scss';\nimport Loader from 'components/common/Loader';\n\nconst MovieDetails = (props) => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const params = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await API.getMovieDetails(params.movieId);\n        // console.log(data)\n        if (data) {\n          setMovieDetails(data);\n        }\n      }\n      catch (e) {\n        console.log('error')\n      }\n      finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [params.movieId])\n\n  if (isLoading) {\n    return <Loader />\n  }\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const getLinkClassName = ({ isActive }) => s.tab + (isActive ? \" \" + s.active : \"\");\n\n  const { title, poster_path, overview, release_date, first_air_date, vote_average, genres } = movieDetails;\n  const releaseDate = release_date || first_air_date;\n  const releaseYear = releaseDate ? new Date(releaseDate).getFullYear() : 0;\n  const userScore = (vote_average * 10).toFixed(0);\n  const genresString = genres.map((({ name }) => name)).join(' ');\n\n\n  return (\n    <div >\n      <Link to={location?.state?.from ?? '/movies'} className={s.link}> Go Back</Link>\n      <div className={s.info}>\n        <img src={poster_path ? API.IMAGES_BASE_URL + 'w342' + poster_path : noImage} alt={title} className={s.poster} />\n        <div>\n          <h2>{title} {releaseYear && `(${releaseYear})`}</h2>\n          <p>User score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresString}</p>\n        </div>\n      </div>\n\n      <hr />\n      <h3>Additional Information:</h3>\n      <ul className={s.btnList}>\n        <li><NavLink to={`/movies/${params.movieId}/reviews`} state={location.state} className={getLinkClassName}>Reviews</NavLink></li>\n        <li><NavLink to={`/movies/${params.movieId}/cast`} state={location.state} className={getLinkClassName}>Cast</NavLink></li>\n      </ul>\n      {/* <hr /> */}\n      <Outlet />\n    </div>\n  )\n};\n\n// MovieDetails.propTypes = {};\n\nexport default MovieDetails;\n"],"names":["props","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","params","useParams","location","useLocation","useEffect","API","movieId","data","console","log","Loader","getLinkClassName","isActive","s","title","poster_path","overview","release_date","first_air_date","vote_average","genres","releaseDate","releaseYear","Date","getFullYear","userScore","toFixed","genresString","map","name","join","to","state","from","className","src","noImage","alt"],"sourceRoot":""}